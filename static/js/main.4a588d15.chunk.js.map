{"version":3,"sources":["components/Header.js","components/Text.js","components/TextCard.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","sessionStorage","setItem","classes","this","AppBar","position","className","nav","Toolbar","Typography","title","variant","Component","withStyles","theme","background","textAlign","Text","allProvided","missing","state","review","location","id","info","push","length","i","string","alert","handlePost","console","log","reviewJSON","axios","post","then","response","data","setState","summary","catch","error","getPublishButton","Button","onClick","preview","returnTheme","createMuiTheme","palette","primary","main","showButtons","uploadFile","showTitle","style","marginBottom","marginTop","showUpload","handleChange","e","target","value","Container","container","Grid","spacing","item","xs","sm","ThemeProvider","TextField","label","margin","onChange","inputbox","width","maxWidth","marginLeft","marginRight","color","deleteB","useStyles","React","useState","useEffect","createContext","makeStyles","root","minWidth","bullet","display","transform","fontSize","pos","TextCard","componentDidMount","componentDidUpdate","getItem","localeCompare","clickhere","Card","CardContent","component","App","direction","alignItems","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4a588d15.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport {withStyles} from '@material-ui/core'\nimport {Redirect} from 'react-router-dom'\n\nconst useStyles = theme => ({\n    nav: {\n        background: \"#121212\",\n        // boxShadow: \"none\",\n        // marginBottom: \"15px\",\n    },\n    title: {\n        textAlign : \"center\",\n    }\n});\n\nclass Header extends Component{\n  constructor(props){\n      super(props)\n      sessionStorage.setItem(\"summary\", \"\")\n  }\n\n  render(){\n  const { classes } = this.props\n  return (\n    <div>\n      <AppBar position=\"static\" className={classes.nav}>\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\">\n            Text Summarizer \n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n  }\n}\nexport default withStyles(useStyles)(Header);","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { withStyles } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid';\nimport { Container, Typography } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\n\n\nimport axios from 'axios';\n\nconst styles = theme => ({\n\n    inputbox: {\n        width: \"100%\",\n        maxWidth: \"50vw\",\n        position : \"absolute\",\n\n    },\n    preview: {\n        marginTop: theme.spacing(5),\n        marginBottom: theme.spacing(2),\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        background: '#2E3B55',\n        color: 'white',\n        '&:hover': {\n            background: '#586481',\n        },\n    },\n    deleteB: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(2),\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        background: '#93160d',\n        color: 'white',\n        '&:hover': {\n            background: '#ca4b35',\n        }\n\n\n    },\n    container: {\n        margin: 'auto',\n        maxWidth: '1400px'\n    },\n})\n\n\nclass Text extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            review : '',\n            summary : ''\n        }\n      \n}\n\n    \n    allProvided = () => {\n        const missing = []\n        if (this.state.review=== ' ' && this.props.location.state.id.info.review === \" \") {\n            missing.push('Review')\n        }\n        \n        if (missing.length !== 0) {\n            var string = ''\n            var i\n            for (i = 0; i < missing.length; i++) {\n                string = string + ' ' + missing[i]\n            }\n            alert(`This cannot be blank!: ${string}`)\n        }\n        else {\n            return true\n        }\n\n    }\n    handlePost = () => {\n        console.log(\"here is the review\")\n        console.log(this.state.review)\n        let reviewJSON = {\n            \"text\": this.state.review,\n        };\n\n\n        axios.post(`https://summarizeruwu.herokuapp.com/summarize`,reviewJSON)\n        .then(response => {\n            console.log(response)\n            console.log(response.data)\n            this.setState({\n                summary: response.data\n            })\n            sessionStorage.setItem(\"summary\", response.data) \n        })\n        .catch(error => {\n            console.log(\"ERROR in Category loading \", error)\n        }) //update with correct string\n    console.log(this.state.summary)\n    }\n\n    getPublishButton = (classes) => {\n        return <Button onClick={this.handlePost} className={classes.preview}> Get Summary </Button>\n    }\n\n    returnTheme = () => {\n        const theme = createMuiTheme({\n            palette: {\n                primary: {\n                    main: '#2E3B55',\n                },\n            },\n        });\n        return theme\n    }\n\n    showButtons = (classes) => {\n            return <div>\n                {this.getPublishButton(classes)}\n            </div>\n\n    }\n\n    uploadFile = () => {\n\n    }\n\n    showTitle = () => {\n            return <Typography variant='h5' style={{ marginBottom: '0%', marginTop: '1%' }}> Enter Text to Summarize Here! </Typography>\n        }\n    \n    showUpload = () => {\n            return <Typography variant='h5' style={{ marginBottom: '0%', marginTop: '1%' }}> Upload a file </Typography>\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            review: e.target.value\n        })\n    }\n    render() {\n        const { classes } = this.props\n        // if (this.state.redirect && (!this.state.is_admin_window)) {\n        //     return (<Redirect to={`/my-articles`} />)\n        // }\n        return (\n            <div >\n                {this.showTitle()}\n                <Container className={classes.container}>\n\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} sm={5}>\n                            <ThemeProvider theme={this.returnTheme()}>\n                                <TextField\n                                    id=\"review\"\n                                    label=\"Text\"\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    onChange={this.handleChange}\n                                    className={classes.inputbox}\n                                    //defaultValue={(this.state.is_edit_window || this.state.is_admin_window) ? this.showDefault().articleTitle : ''}\n                                />                               \n                            </ThemeProvider>\n                        </Grid>\n                    </Grid>\n                </Container>\n                <br/>\n                <br/>\n                <br/>\n                {this.showButtons(classes)}\n            </div >\n        );\n    }\n}\n\nexport default withStyles(styles)(Text); \n","import React, {Component} from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { CardActionArea, CardMedia } from \"@material-ui/core\";\nimport { Redirect } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport { withStyles} from '@material-ui/core';\nimport { Grid } from \"@material-ui/core\";\n\n\nconst { useState, useEffect } = React;\n\nconst IsUseContext = React.createContext();\n\nconst useStyles = makeStyles({\n    root: {\n      minWidth: 275,\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n    },\n  });\n\nclass TextCard extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n        summary : sessionStorage.getItem('summary')\n    }\n  }\n \n  componentDidMount = () => {\n    console.log(\"TEXTCARD component loaded\")\n  }\n\n  componentDidUpdate = () => {\n    if(!(sessionStorage.getItem(\"summary\").localeCompare(\"Loading..\"))){\n    console.log(\"STATE CHANGED!!!\")\n        this.setState({\n        summary : sessionStorage.getItem(\"summary\")\n    })\n  }\n}\n    clickhere = () => {\n        this.setState({\n            summary:sessionStorage.getItem(\"summary\")\n        })\n    }\n\n\n\n  render(){\n    const { classes } = this.props\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n        <CardContent onClick={this.clickhere}>\n          <Typography variant=\"h5\" component=\"h2\">\n            {this.state.summary}\n          </Typography>\n          <Button onClick={this.clickhere}>Click to view Summary</Button>\n        </CardContent>\n      </Card>\n    )\n  }\n}\n\n\n  \nexport default withStyles(useStyles)(TextCard);","import React, {Component} from 'react';\nimport Header from './components/Header';\nimport { Grid } from \"@material-ui/core\";\nimport Text from './components/Text';\nimport TextCard from './components/TextCard';\n\nclass App extends Component{\n  \n  render(){\n  return (\n    <Grid container direction=\"column\">\n    <Grid item>\n      <Header />\n    </Grid>\n    <Grid item container alignItems=\"center\">\n      <Grid item/>\n        <Text />\n      </Grid>\n      <Grid item/>\n        <TextCard />\n    </Grid>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}